/*
    Daniel J. Litten II
    Southwestern College - Professional Studies
    CSCI 421 - Java Programming Principles I
    Mr. Russell Schoech
    March 15, 2022
*/

/*
    This class simulates a police officer inspecting parked
    cars.  It is responsible for knowing the officer's name
    and badge number, examining a ParkedCar object and a
    ParkingMeter object, and determines if the car's time is
    expired.  It is also responsible for issuing a parking ticket,
    generated by a ParkingTicket object, if the car's time has
    expired.
*/

// Import ArrayList and Scanner classes
import java.util.ArrayList;
import java.util.Scanner;

public class PoliceOfficer
{
    private String name;            // The officer's name
    private String badgeNum;        // The officer's badge number

    // Create ArrayList object to hold new written tickets
    private final ArrayList<ParkingTicket> writeTickets = new ArrayList<>();

    // Copy constructor
    public PoliceOfficer(PoliceOfficer object2)
    {
        this.name = object2.getName();
        this.badgeNum = object2.getBadgeNum();
    }

    /**
     * This constructor accepts values as arguments and assigns
     * them to the appropriate fields
     * @param n The officer's name
     * @param b The officer's badge number
     */
    public PoliceOfficer(String n, String b)
    {
        this.name = n;
        this.badgeNum = b;
    }

    /**
     * setName method
     * @param n The officer's name
     */
    public void setName(String n)
    {
        this.name = n;
    }

    /**
     * setBadgeNum method
     * @param b The officer's badge number
     */
    public void setBadgeNum(String b)
    {
        this.badgeNum = b;
    }

    /**
     * getName method
     * @return The officer's name
     */
    public String getName()
    {
        return name;
    }

    /**
     * getBadgeNum method
     * @return The officer's badge number
     */
    public String getBadgeNum()
    {
        return badgeNum;
    }

    // toString method to return the officer's name and badge number to the ParkingTicket class
    public String toString()
    {
        return "Officer Name: " + name
                + "\nBadge Number: " + badgeNum;
    }


    // Returns a boolean value if car parked time is greater than car paid time
    public boolean illegallyParked (ParkedCar carToExamine, ParkingMeter meterToExamine)
    {
        return carToExamine.getMinutes() > meterToExamine.getPaidParking();
    }

    // if car is legally parked, returns that the car is not illegally parked
    public void issueParkingTicket(ParkedCar carToExamine, ParkingMeter meterToExamine)
    {
        if (!illegallyParked(carToExamine, meterToExamine))
        {
            System.out.println("The car is not illegally parked");
        }
    }

    // examineCars method for police officer to examine a ParkedCar and ParkingMeter object
    // to determine if car's time has expired and if car is illegally parked, generates
    // ticket and stores it in the ArrayList
    public void examineCars()
    {
        Scanner keyboard = new Scanner(System.in);

        String input;               // Hold the officer's input
        String make;                // The car's make
        String model;               // The car's model
        String color;               // The car's color
        String licenseNumber;       // The car's license number
        int minutes;                // The time the car has been parked
        int paidParking;            // The time the car has be paid to be parked


        // While loop to ask officer to examine more cars or not, and
        // write tickes to the writeTickets ArrayList
        while (true)
        {

            // Asks officer if they want to examine more cars
            System.out.print("Type 'check' to check a vehicle or type in 'done' to be completed: ");
            input = keyboard.nextLine();

            // if-else if statement to determine if more cars will be examined
            if (input.toLowerCase().equals("done"))
            {
                return;
            }
            else if (input.toLowerCase().equals("check"))
            {
                // Get the make of the car
                System.out.print("\nWhat is the make of the car? ");
                make = keyboard.nextLine();

                // Get the model of the car
                System.out.print("What is the model of the car? ");
                model = keyboard.nextLine();

                // Get the color of the car
                System.out.print("What is the color of the car? ");
                color = keyboard.nextLine();

                // Get the license number of the car
                System.out.print("What is the license number of the car? ");
                licenseNumber = keyboard.nextLine();

                // Get the time in minutes the car has been parked
                System.out.print("How many minutes has the car been parked? ");
                input = keyboard.nextLine();
                minutes = Integer.parseInt(input);

                // Get the time in minutes the car is paid to be parked
                System.out.print("How many minutes has the car been paid to be parked? ");
                input = keyboard.nextLine();
                paidParking = Integer.parseInt(input);


                ParkedCar carToExamine = new ParkedCar(make, model, color, licenseNumber, minutes);
                ParkingMeter meterToExamine = new ParkingMeter(paidParking);

                //  if-else statement to determine if car is illegally parked and if so
                // write tickets to the writeTickets ArrayList
                if (illegallyParked(carToExamine, meterToExamine))
                {
                    ParkingTicket writeTicket = new ParkingTicket(carToExamine, meterToExamine, name, badgeNum);
                    writeTickets.add(writeTicket);
                    System.out.println("The car is illegally parked.\n");
                }
                else
                {
                    System.out.println("The car is legally parked.");
                }
            }
        }
    }

    // method to be called by the ParkingTicketSimulator to print all of the tickets
    // stored in the writeTickets ArrayList
    public void printTickets()
    {
        for (int i = 0; i < writeTickets.size(); i++)
        {
            System.out.println(writeTickets.get(i));
        }
    }
}
